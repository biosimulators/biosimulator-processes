AN AI THAT WRITES CLINICAL DATA OBSERVATION DOWN DURING A SESSION VIA A MIC AND VISUAL


openapi: 3.0.3
info:
  description: '<p>BioModels is a repository of mathematical models of biological and biomedical systems. It hosts a vast selection of existing literature-based physiologically and pharmaceutically relevant mechanistic models in standard formats. Our mission is to provide the systems modelling community with reproducible, high-quality, <a href=''http://creativecommons.org/publicdomain/zero/1.0/'' target=''_blank''>freely-accessible</a> models published in the scientific literature. More information about BioModels can be found in the <a href=''../faq''>FAQ</a>.</p> <h3>Notes about this API</h3> <h4 id=''contentNegotiation''>Content negotiation</h4> <p>Both XML and JSON MIME types are supported. Clients have two ways of specifying the content type: <ul> <li>an explicit format request parameter (e.g. format=xml)</li> <li>the Accept request header (e.g. Accept: application/xml).</li> </ul> If both are specified, the format parameter has priority. </p> <h4>BioModels content</h4> <p>Model information is retrieved based on the a submission identifier, such as MODEL1707110000, or a BioModels identifier, like BIOMD0000000123. BioModels content is versioned and model revision numbers are assigned incrementally starting from 1. If a particular model revision is public, it can be accessed by appending a dot (''.'') and its number to the model identifier (e.g. BIOMD0000000123.1). </p> <p><h4>Path2Models</h4></p>Models from the <a href=''../path2models'' target=''_blank'' title=''find out more about Path2Models -- link opens in a new window''>Path2Models</a> project are now clustered based on their genus. Each Path2Models entry now consists of a representative model and a COMBINE archive of all other models whose organisms belong to that genus. As a result of this shuffle, some models are no longer directly accessible and such requests are redirected to the corresponding representative model. There are dedicated end points for checking which models are now only retrievable indirectly and also to find the representative model(s) for a given set of model identifiers.</p> '
  version: v1.0
  title: BioModels
  termsOfService: https://www.ebi.ac.uk/data-protection/privacy-notice/embl-ebi-public-website
  contact:
    email: biomodels-developers@lists.sourceforge.net
  license:
    name: AGPL v3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
servers:
  - url: https://www.ebi.ac.uk/biomodels/
    description: The production API server
  - url: https://wwwdev.ebi.ac.uk/biomodels/
    description: The development API server
  - url: http://localhost:8080/biomodels/
    description: The local development API server
tags:
  - name: Model-related operations
    description: Retrieve information about a particular submission.
  - name: Search models
    description: Find models of interest
  - name: Parameters Search
    description: Find model parameters of interest
  - name: Path2Models operations
    description: Find Path2Models models of interest
  - name: PDGSMM operations
    description: Find Patient-derived genome-scale metabolic models (PDGSMM) of interest
schemes:
  - https
  - http
paths:
  /{modelId}:
    get:
      tags:
        - Model-related operations
      summary: Fetch information about a given model at a particular revision.
      operationId: fetchModelInfo
      parameters:
        - in: path
          name: modelId
          description: The identifier of a public model in BioModels.
          required: true
          type: string
        - in: query
          name: format
          description: The response format
          type: string
          required: false
          enum:
            - json
            - xml
            - html
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Model'
        '404':
          description: Invalid model id
        '415':
          description: 'Unsupported media type. Please see the <a href=''#contentNegotiation''>content negotiation</a> section. '
  /model/files/{modelId}:
    get:
      tags:
        - Model-related operations
      summary: Extract metadata information of model files of a particular model
      operationId: extractModelMetadata
      parameters:
        - in: path
          name: modelId
          required: true
          type: string
          description: The identifier of the model for which to retrieve the files.
        - in: query
          name: format
          type: string
          required: false
          description: The format that the response should return
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ModelFiles'
        '404':
          description: Invalid model id supplied
        '415':
          description: Unsupported media type. Please see the <a href='#contentNegotiation'>content negotiation</a> section.
  /model/download/{modelId}:
    get:
      tags:
        - Model-related operations
      summary: Download a particular file associated with a given model or all its files as a COMBINE archive. The Content disposition and MIME type response headers contain the file name and type.
      operationId: downloadModelFile
      parameters:
        - in: path
          name: modelId
          required: true
          description: The model identifier that the file in question is associated with
          type: string
        - in: query
          name: filename
          type: string
          description: The name of the file that needs to be downloaded. If not provided, all model files are returned as a <a href='https://co.mbine.org/standards/omex' target='_blank'>COMBINE archive</a>. If the file name is set, then the file contents will be served.
          required: false
      produces:
        - application/octet-stream
      responses:
        '200':
          description: Successful operation
        '400':
          description: File Not Found
        '404':
          description: Invalid Model ID Supplied
  /model/identifiers:
    get:
      tags:
        - Model-related operations
      summary: Fetch all model identifiers
      description: Fetch all publicly available model identifiers
      operationId: fetchAllIdentifiers
      parameters:
        - in: query
          name: format
          type: string
          required: false
          description: The format that the response should return
          enum:
            - json
            - xml
            - html
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ModelIdentifiers'
        '404':
          description: Invalid operation
        '415':
          description: Unsupported media type
  /search:
    get:
      tags:
        - Search models
      summary: Download search results
      operationId: downloadSearchResults
      description: 'Search models of interest via keywords. Examples: PUBMED:"27869123" to search models associated with the PubMed record identified by 27869123. See [Model search](https://www.ebi.ac.uk/biomodels-static/user-guide/model_search.html) page to know more about search syntax, options and examples.'
      parameters:
        - in: query
          name: query
          required: true
          type: string
          description: Search query. Please note that the colon character in ontology terms must be escaped.
        - in: query
          name: offset
          type: integer
          required: false
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: numResults
          type: integer
          required: false
          description: The number of items to return
        - in: query
          name: sort
          type: string
          required: false
          enum:
            - relevance-desc
            - first_author-asc
            - first_author-desc
            - id-asc
            - id-desc
            - name-asc
            - name-desc
            - publication_year-asc
            - publication_year-desc
          description: Sort criteria
        - in: query
          name: format
          type: string
          required: false
          description: The format that the response should return
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/SearchResults'
        '404':
          description: Not Found
  /search/download:
    get:
      tags:
        - Search models
      summary: Download a single or multiple models
      operationId: downloadModel
      description: Download the main file of a given single model or multiple models via their model identifiers.
      parameters:
        - in: query
          name: models
          required: true
          type: string
          description: The list of model identifiers which you want to download their main file. Using the comma to separate if you are requesting more than one model.
      produces:
        - application/zip
      responses:
        '200':
          description: Successful operation
        '404':
          description: Not Found
  /parameterSearch/search:
    get:
      tags:
        - Parameters Search
      summary: Search for parameters of a model
      parameters:
        - in: query
          name: query
          required: false
          type: string
          description: A query to search against the model parameter values.
        - in: query
          name: start
          type: integer
          required: false
          description: It is the offset of the result set, please enter the number of records to skip.<br/> <i>Default value = 0</i>
        - in: query
          name: size
          type: integer
          required: false
          description: The number of items to display per page. <i>Default value = 10</i>
          enum:
            - 10
            - 25
            - 50
            - 100
        - in: query
          name: sort
          type: string
          required: false
          description: 'The column name and sort direction to perform the sort operation, <u>Sortable columns: model, entity</u>.<br/>'
        - in: query
          name: format
          type: string
          required: false
          description: The format of the result (XML,CSV and JSON). <i>Default value = XML</i>
      produces:
        - application/json
        - application/csv
      responses:
        '200':
          description: successful operation
        '400':
          description: |-
            Invalid request parameters OR
             Unable to retrieve data from EBI Search due to some problem with the request parameters
        '500':
          description: Error encountered while processing Request parameters, No matches found
  /p2m/missing:
    get:
      tags:
        - Path2Models operations
      summary: Retrieve the identifiers of all Path2Models entries that are no longer directly accessible
      description: Retrieve all models in Path2Models that are now only available indirectly, through the representative model for the corresponding genus
      parameters:
        - in: path
          name: format
          description: The response format
          required: false
          type: string
          enum:
            - json
            - xml
            - html
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        '200':
          description: Successful operation
  /p2m/representative:
    get:
      tags:
        - Path2Models operations
      summary: Retrieve a representative model in Path2Models
      description: Get the representative model identifier for a given missing model in Path2Models. This endpoint accepts as parameters a mandatory model identifier and an optional response format
      parameters:
        - in: query
          name: model
          description: The identifier of a model of interest
          required: true
          type: string
        - in: query
          name: format
          description: The response format
          required: false
          type: string
          enum:
            - json
            - xml
            - html
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        '200':
          description: Successful operation. We return a mapping between the given accession and that of its representative (or null if the given identifier does not exist)
        '404':
          description: Not Found
  /p2m/representatives:
    get:
      tags:
        - Path2Models operations
      summary: Find the replacement accessions for a set of Path2Models entries
      description: 'Get the representative model identifiers of a set of given missing models in Path2Models. This end point expects a comma-separated list of model identifiers (without any surrounding whitespace) and an optional response format. Examples: BMID000000112902,BMID000000009880,BMID000000027397'
      parameters:
        - in: query
          name: modelIds
          description: The list of requested model identifiers
          required: true
          type: array
          collectionFormat: csv
          items:
            - type: string
        - in: query
          name: format
          description: The response format
          required: false
          type: string
          enum:
            - json
            - xml
            - html
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        '200':
          description: The lookup completed successfully. The response will contain a mapping between the given identifiers and their corresponding .
  /pdgsmm/missing:
    get:
      tags:
        - PDGSMM operations
      summary: Retrieve the identifiers of all PDGSMM entries that are no longer directly accessible
      description: Retrieve all models in PDGSMM that are now only available indirectly, through the representative model for the corresponding disease
      parameters:
        - in: path
          name: format
          description: The response format
          required: false
          type: string
          enum:
            - json
            - xml
            - html
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        '200':
          description: Successful operation
  /pdgsmm/representative:
    get:
      tags:
        - PDGSMM operations
      summary: Retrieve a representative model in PDGSMM
      description: Get the representative model identifier for a given missing model in PDGSMM. This endpoint accepts as parameters a mandatory model identifier and an optional response format
      parameters:
        - in: query
          name: model
          description: The identifier of a model of interest
          required: true
          type: string
        - in: query
          name: format
          description: The response format
          required: false
          type: string
          enum:
            - json
            - xml
            - html
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        '200':
          description: Successful operation. We return a mapping between the given accession and that of its representative (or null if the given identifier does not exist)
        '404':
          description: Not Found
  /pdgsmm/representatives:
    get:
      tags:
        - PDGSMM operations
      summary: Find the replacement accessions for a set of PDGSMM
      description: 'Get the representative model identifiers of a set of given missing models in PDGSMM. This end point expects a comma-separated list of model identifiers (without any surrounding whitespace) and an optional response format. Examples: MODEL1707110145,MODEL1707112456,MODEL1707115900'
      parameters:
        - in: query
          name: modelIds
          description: The list of requested model identifiers
          required: true
          type: array
          collectionFormat: csv
          items:
            - type: string
        - in: query
          name: format
          description: The response format
          required: false
          type: string
          enum:
            - json
            - xml
            - html
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        '200':
          description: The lookup completed successfully. The response will contain a mapping between the given identifiers and their corresponding.
definitions:
  Model:
    type: object
    properties:
      name:
        type: string
        description: The name of the model.
      description:
        type: string
        description: The description of the model.
      publication:
        type: object
        description: The Publication object to hold the model's publication metadata such as title, authors, PUBMED id, etc.
        $ref: '#/definitions/Publication'
      submissionId:
        type: string
        description: The identifier assigned to the model when it was submitted to BioModels
        example: MODEL1707111234
      publicationId:
        type: string
        description: The identifier assigned to the model when it was published in the curated branch of BioModels.
        example: BIOMD0000000001
      firstPublished:
        type: integer
        format: int32
        description: The date, which is encoded under Unix Epoch time, when the model first became publicly available in BioModels.
        example: '1543316622000'
      format:
        type: object
        $ref: '#/definitions/Format'
        description: The model format comprises of the name and version
      history:
        type: object
        $ref: '#/definitions/History'
        description: ''
      files:
        type: object
        $ref: '#/definitions/ModelFiles'
        description: ''
    xml:
      name: Model
  Format:
    type: object
    properties:
      name:
        type: string
        description: The format name
      version:
        type: string
        description: The format version
  History:
    type: object
    properties:
      revisions:
        type: array
        items:
          $ref: '#definitions/Revision'
        description: The list of the revisions
  ModelSummary:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier could be either publication or submission identifier
      url:
        type: string
        description: The model link which we can access it directly
        example: https://www.ebi.ac.uk/biomodels/BIOMD0000000651
      name:
        type: string
        description: The name/title of the model
        example: 'Nguyen2016 - Feedback regulation in cell signalling: Lessons for cancer therapeutics'
      format:
        type: string
        description: The text presents the model format
        example: SBML
      submitter:
        type: string
        description: The person name who submitted the model
      submissionDate:
        type: string
        format: date-time
        description: The date in UTC when the model was submitted to BioModels
      lastModified:
        type: string
        format: date-time
        description: The latest date in UTC when the model was modified
    xml:
      name: ModelSummary
  Publication:
    type: object
    properties:
      journal:
        type: string
        description: The name of the journal where the publication was published
      title:
        type: string
        description: The title of the manuscript
      affiliation:
        type: string
        description: The name of the corresponding author's institution
      synopsis:
        type: string
        description: The abstract of the publication
      year:
        type: integer
        format: int32
        description: The year when the publication was published
      month:
        type: string
        description: The month of the year when the publication was published
      day:
        type: integer
        format: int32
        description: The day of the month when the publication was published
      volume:
        type: string
        description: The volume number of the journal in which the publication was published
      issue:
        type: string
        description: The issue number of the journal volume in where the publication was published
      pages:
        type: string
        description: The range of pages of the publication showing in the issue
      link:
        type: string
        description: The publication link where we can access and read it
      authors:
        type: array
        $ref: '#/definitions/PublicationAuthor'
        description: The list of the publication authors
    xml:
      name: Publication
  SearchResults:
    type: object
    properties:
      matches:
        type: integer
        format: int32
        description: The number of the models matching with the search term
      models:
        type: array
        $ref: '#/definitions/ModelSummary'
        description: The list of the models matching with the search term
      queryParameters:
        type: object
        description: The parameters attached to the query
        $ref: '#/definitions/QueryParameters'
    xml:
      name: SearchResults
  QueryParameters:
    type: object
    properties:
      sortBy:
        type: string
        enum:
          - relevance
          - first_author
          - id
          - name
          - publication_year
        description: The sorting column
      sortDirection:
        type: string
        enum:
          - asc
          - desc
        description: The sorting direction
      offset:
        type: integer
        format: int32
        description: The number telling to skip that many rows before beginning to return rows
      numResults:
        type: integer
        format: int32
        description: The number of records/rows per page
    xml:
      name: QueryParameters
  ModelFiles:
    type: object
    properties:
      main:
        type: array
        items:
          $ref: '#/definitions/ModelFile'
        description: The list of the main files
      additional:
        type: array
        items:
          $ref: '#/definitions/ModelFile'
        description: The list of the additional files
  ModelFile:
    type: object
    properties:
      name:
        type: string
        description: The file name with the extension if it is available
      fileSize:
        type: integer
        format: int64
        description: The size of the file in bytes
  PublicationAuthor:
    type: object
    properties:
      name:
        type: string
        description: The author name
      institution:
        type: institution
        description: The institution name where the author is working/belonging to
      orcid:
        type: string
        description: The identifier of ORCID
        example: 0000-0001-8479-0262
  Revision:
    type: object
    properties:
      version:
        type: integer
        description: The integer denoting the revision number
      submitted:
        type: number
        description: The date when the revision was created
      submitter:
        type: string
        description: The name of the revision submitter
      comment:
        type: string
        description: The commit message denoting what, when and why the model is updated
  ModelIdentifiers:
    type: object
    properties:
      hits:
        type: integer
        description: The number of accessible model identifiers
      models:
        type: array
        description: The list of all accessible model identifiers
externalDocs:
  description: Find out more about BioModels
  url: https://www.ebi.ac.uk/biomodels
