openapi: 3.0.3
info:
  description: |
    <p>BioModels is a repository of mathematical models of biological and biomedical systems. It hosts a vast selection of existing literature-based physiologically and pharmaceutically relevant mechanistic models in standard formats. Our mission is to provide the systems modelling community with reproducible, high-quality, <a href='http://creativecommons.org/publicdomain/zero/1.0/' target='_blank'>freely-accessible</a> models published in the scientific literature. More information about BioModels can be found in the <a href='../faq'>FAQ</a>.</p>
    <h3>Notes about this API</h3>
    <h4 id='contentNegotiation'>Content negotiation</h4>
    <p>Both XML and JSON MIME types are supported. Clients have two ways of specifying the content type:
    <ul>
      <li>an explicit format request parameter (e.g. format=xml)</li>
      <li>the Accept request header (e.g. Accept: application/xml).</li>
    </ul>
    If both are specified, the format parameter has priority. </p>
    <h4>BioModels content</h4>
    <p>Model information is retrieved based on the a submission identifier, such as MODEL1707110000, or a BioModels identifier, like BIOMD0000000123. BioModels content is versioned and model revision numbers are assigned incrementally starting from 1. If a particular model revision is public, it can be accessed by appending a dot ('.') and its number to the model identifier (e.g. BIOMD0000000123.1). </p>
    <p><h4>Path2Models</h4></p>Models from the <a href='../path2models' target='_blank' title='find out more about Path2Models -- link opens in a new window'>Path2Models</a> project are now clustered based on their genus. Each Path2Models entry now consists of a representative model and a COMBINE archive of all other models whose organisms belong to that genus. As a result of this shuffle, some models are no longer directly accessible and such requests are redirected to the corresponding representative model. There are dedicated end points for checking which models are now only retrievable indirectly and also to find the representative model(s) for a given set of model identifiers.</p>
  version: v1.0
  title: BioModels
  termsOfService: https://www.ebi.ac.uk/data-protection/privacy-notice/embl-ebi-public-website
  contact:
    email: biomodels-developers@lists.sourceforge.net
  license:
    name: AGPL v3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
servers:
  - url: https://www.ebi.ac.uk/biomodels/
    description: The production API server
  - url: https://wwwdev.ebi.ac.uk/biomodels/
    description: The development API server
  - url: http://localhost:8080/biomodels/
    description: The local development API server
tags:
  - name: Model-related operations
    description: Retrieve information about a particular submission.
  - name: Search models
    description: Find models of interest
  - name: Parameters Search
    description: Find model parameters of interest
  - name: Path2Models operations
    description: Find Path2Models models of interest
  - name: PDGSMM operations
    description: Find Patient-derived genome-scale metabolic models (PDGSMM) of interest
paths:
  /{modelId}:
    get:
      tags:
        - Model-related operations
      summary: Fetch information about a given model at a particular revision.
      operationId: getModelInfo
      parameters:
        - in: path
          name: modelId
          description: The identifier of a public model in BioModels.
          required: true
          schema:
            type: string
        - in: query
          name: format
          description: The response format
          schema:
            type: string
            enum:
              - json
              - xml
              - html
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        404:
          description: Invalid model id
        415:
          description: Unsupported media type. Please see the <a href='#contentNegotiation'>content negotiation</a> section.
  /model/files/{modelId}:
    get:
      tags:
        - Model-related operations
      summary: Extract metadata information of model files of a particular model
      operationId: getModelFiles
      parameters:
        - in: path
          name: modelId
          required: true
          schema:
            type: string
          description: The identifier of the model for which to retrieve the files.
        - in: query
          name: format
          schema:
            type: string
          required: false
          description: The format that the response should return
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelFiles'
        404:
          description: Invalid model id supplied
        415:
          description: Unsupported media type. Please see the <a href='#contentNegotiation'>content negotiation</a> section.
  /model/download/{modelId}:
    get:
      tags:
        - Model-related operations
      summary: Download a particular file associated with a given model or all its files as a COMBINE archive.
      operationId: downloadModelFile
      parameters:
        - in: path
          name: modelId
          required: true
          description: The model identifier that the file in question is associated with
          schema:
            type: string
        - in: query
          name: filename
          schema:
            type: string
          description: The name of the file that needs to be downloaded. If not provided, all model files are returned as a <a href='https://co.mbine.org/standards/omex' target='_blank'>COMBINE archive</a>. If the file name is set, then the file contents will be served.
          required: false
      #produces:
       # - application/octet-stream
      responses:
        200:
          description: Successful operation
        400:
          description: File Not Found
        404:
          description: Invalid Model ID Supplied
  /model/identifiers:
    get:
      tags:
        - Model-related operations
      summary: Fetch all model identifiers
      operationId: getAllModelIdentifiers
      description: Fetch all publicly available model identifiers
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - json
              - xml
              - html
          required: false
          description: The format that the response should return
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelIdentifiers'
        404:
          description: Invalid operation
        415:
          description: Unsupported media type
  /search:
    get:
      tags:
        - Search models
      summary: Download search results
      operationId: searchModels
      description: Search models of interest via keywords.
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: Search query. Please note that the colon character in ontology terms must be escaped.
        - in: query
          name: offset
          schema:
            type: integer
          required: false
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: numResults
          schema:
            type: integer
          required: false
          description: The number of items to return
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - relevance-desc
              - first_author-asc
              - first_author-desc
              - id-asc
              - id-desc
              - name-asc
              - name-desc
              - publication_year-asc
              - publication_year-desc
          required: false
          description: Sort criteria
        - in: query
          name: format
          schema:
            type: string
          required: false
          description: The format that the response should return
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
        404:
          description: Not Found
  /search/download:
    get:
      tags:
        - Search models
      summary: Download a single or multiple models
      operationId: downloadModels
      description: Download the main file of a given single model or multiple models via their model identifiers.
      parameters:
        - in: query
          name: models
          required: true
          schema:
            type: string
          description: The list of model identifiers which you want to download their main file. Using the comma to separate if you are requesting more than one model.
      # produces:
      #   - application/zip
      responses:
        200:
          description: Successful operation
        404:
          description: Not Found
components:
  schemas:
    Model:
      type: object
      properties:
        name:
          type: string
          description: The name of the model.
    ModelFiles:
      type: object
      properties:
        name:
          type: string
          description: The file of the model.
    ModelIdentifiers:
      type: object
      properties:
        name:
          type: string
          description: The file of the model.
    SearchResults:
      type: object
      properties:
        name:
          type: string
          description: The file of the model.
externalDocs:
  description: Find out more about BioModels
  url: https://www.ebi.ac.uk/biomodels

