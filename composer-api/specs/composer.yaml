openapi: 3.0.3
info:
  title: process-bigraph
  description: An API for running biosimulation processes using Copasi/Basico.
  version: "1.0.0"
servers:
  - url: https://localhost:8000
    description: Local server
paths:
  /initialize:
    post:
      summary: Initialize the simulation with a model file.
      operationId: initializeSimulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model_file:
                  type: string
                  description: Path to the model file.
      responses:
        '200':
          description: Simulation initialized successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Simulation initialized with model_file.
  /run:
    post:
      summary: Run the simulation for a given interval.
      operationId: runSimulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interval:
                  type: integer
                  description: Interval for which the simulation is run.
      responses:
        '200':
          description: Simulation run successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: float
                    example: 10
                  floating_species:
                    type: object
                    additionalProperties:
                      type: float
                    example: {"species1": 0.5, "species2": 1.5}
  /update:
    post:
      summary: Update the simulation state.
      operationId: updateSimulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: object
                  description: New state to update the simulation with.
      responses:
        '200':
          description: Simulation state updated successfully.
  /results:
    get:
      summary: Fetch the simulation results.
      operationId: fetchResults
      responses:
        '200':
          description: Results fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: object
                    additionalProperties: true
                    example: {"floating_species": {"species1": 0.5, "species2": 1.5}, "time": 10}
components:
  schemas:
    SimulationState:
      type: object
      properties:
        time:
          type: float
        floating_species:
          type: object
          additionalProperties:
            type: float
